# From: https://docs.aws.amazon.com/documentdb/latest/developerguide/quick-start-with-cloud-formation.html
AWSTemplateFormatVersion: 2010-09-09
Description: >
  DocumentDB DB cluster and DB instance.
Parameters:
  MasterUser:
    NoEcho: "true"
    Description : "The database admin account username"
    Type: "String"
    MinLength: "1"
    MaxLength: "16"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription : "Must begin with a letter and contain only alphanumeric characters."
  MasterPassword:
    NoEcho: "true"
    Description : "The database admin account password"
    Type: "String"
    MinLength: "1"
    MaxLength: "41"
    AllowedPattern : "[a-zA-Z0-9]+"
    ConstraintDescription : "must contain only alphanumeric characters."
  DBInstanceClass:
    Description : "Instance class. Please refer to: https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-classes.html#db-instance-classes-by-region"
    Type: "String"
    AllowedValues:
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.12xlarge
      - db.r5.24xlarge
    ConstraintDescription : "Instance type must be of the ones supported for the region. Please refer to: https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-classes.html#db-instance-classes-by-region"
  VpcName:
    Description: 'Name of an existing VPC to run the instance in'
    Type: String
Resources:
  DocumentDbAccessSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !ImportValue
        'Fn::Sub': '${AWS::Region}-${VpcName}-VPCId'
      GroupDescription: Instances with access to document DB servers
  DocumentDbSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !ImportValue
        'Fn::Sub': '${AWS::Region}-${VpcName}-VPCId'
      GroupDescription: Document DB server management and access ports
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27030
          SourceSecurityGroupId: !Ref DocumentDbAccessSecurityGroup
        - IpProtocol: tcp
          FromPort: 28017
          ToPort: 28017
          SourceSecurityGroupId: !Ref DocumentDbAccessSecurityGroup
  DBSubnetGroup:
    Type: AWS::DocDB::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Agora doc db subnet group
      SubnetIds:
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-${VpcName}-PrivateSubnet'
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-${VpcName}-PrivateSubnet1'
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-${VpcName}-PrivateSubnet2'
  DBParameterGroup:
    Type: "AWS::DocDB::DBClusterParameterGroup"
    Properties:
      Description: "Agora Document DB configs"
      Family: "docdb4.0"
      Parameters:
        audit_logs: "disabled"
        profiler: "enabled"
        profiler_sampling_rate: "1.0"
        profiler_threshold_ms: "50"
        change_stream_log_retention_duration: "10800"
        tls: "disabled"
        ttl_monitor: "disabled"
  DBCluster:
    Type: "AWS::DocDB::DBCluster"
    DeletionPolicy: Delete
    Properties:
      MasterUsername: !Ref MasterUser
      MasterUserPassword: !Ref MasterPassword
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBClusterParameterGroupName: !Ref DBParameterGroup
      StorageEncrypted: true
      PreferredMaintenanceWindow: "sat:06:54-sat:07:24"
      Port : 27017
      EnableCloudwatchLogsExports:
        - "profiler"
      VpcSecurityGroupIds:
        - !Ref DocumentDbAccessSecurityGroup
        - !Ref DocumentDbSecurityGroup
        - !ImportValue
            'Fn::Sub': '${AWS::Region}-${VpcName}-VpnSecurityGroup'
  DBInstance:
    Type: "AWS::DocDB::DBInstance"
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      AutoMinorVersionUpgrade: true
      DBInstanceClass: !Ref DBInstanceClass
Outputs:
  ClusterId:
    Value: !Ref DBCluster
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ClusterId'
  ClusterEndpoint:
    Value: !GetAtt DBCluster.Endpoint
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ClusterEndpoint'
  ClusterReadEndpoint:
    Value: !GetAtt DBCluster.ReadEndpoint
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ClusterReadEndpoint'
  ClusterPort:
    Value: !GetAtt DBCluster.Port
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ClusterPort'
  InstanceId:
    Value: !Ref DBInstance
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-InstanceId'
  InstancePort:
    Value: !GetAtt DBInstance.Port
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-InstancePort'
  InstanceEndpoint:
    Value: !GetAtt DBInstance.Endpoint
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-InstanceEndpoint'
  DocumentDbAccessSecurityGroup:
    Value: !Ref DocumentDbAccessSecurityGroup
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DocumentDbAccessSecurityGroup'
  DocumentDbSecurityGroup:
    Value: !Ref DocumentDbSecurityGroup
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DocumentDbSecurityGroup'
